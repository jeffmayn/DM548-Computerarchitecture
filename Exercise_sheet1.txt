# Exercise 1 - Computerarchitecture
-------------------------------------------------

1.
# f = freq
# t = 1 / f (cycle time)
# I_c = instruction count
# I_i = intruction count of type i

a)
CPI (Cycle per instruction):
CPI = SUM(n,i=0) (CPI_i * I_i) / I_c
((41 * 1 + 28 * 2 + 25 * 2 + 6 * 2) * 10^3 ) / ((41 + 28 + 25 + 6) * 10^3) = 1.59

MIPS (millions of instructions per second):
40 MHz = 40 * 10^6 = 40.000.000 Hertz

b)
MIPS = f / CPI * 10^6
(40 * 10^6) / (1.59 * 10^6) = 25.15

c)
CPU = (100 * 10^3 * 1.59) / (40 * 10^3) = 3.975 seconds

2.
Represent decimal +64 and -28 in: Binary sign/magnitude,
and two's compliment using 8 bits.
--------------------------------------------------------------------
  2^7  2^6  2^5  2^4  2^3  2^2  2^1  2^0
  128   64   32   16   8    4    2    1
--------------------------------------------------------------------
  DECIMAL 64 to binary:
   0   1    0    0    0    0    0    0

  DECIMAL 64 to binary, TWO'S COMPLIMENT:
   0   1    0    0    0    0    0    0
----------------------------------------
DECIMAL -28 to binary, SIGNED:
 1    0    0    1    1    1    0    0

DECIMAL -28 to binary, TWO'S COMPLIMENT:
 0    0    0    1    1    1    0    0
 1    1    1    0    0    0    1    1
                                    1
 1    1    1    0    0    1    0    0
 ---------------------------------------

3.
01100110 to DECIMAL
 0    1    1    0    0    1    1    0
     64  + 32    +        4  + 2        = 120

01011101 to DECIMAL
 0    1    0    1    1    1    0    1
     64     +   16 + 8  + 4    +    1   = 93

4.
???

5.
???

6.
a)
   6 = 0 0 0 0 0 1 1 0
+ 12 = 0 0 0 0 1 1 0 0
----------------------
       0 0 0 1 0 0 1 0 result

b)
  -6 = 0 0 0 0 0 1 1 0
       1 1 1 1 1 0 0 1 inverted
                     1
       1 1 1 1 1 0 1 0 sub-result
+ 12   0 0 0 0 1 1 0 0
----------------------
       0 0 0 0 0 1 1 0 result

c)
  6  = 0 0 0 0 0 1 1 0
- 12 = 0 0 0 0 1 1 0 0
       1 1 1 1 0 0 1 1 inverted
                     1
       1 1 1 1 0 1 0 0 sub-result
----------------------
       1 1 1 1 1 0 1 0 result

d)
  -6 = 0 0 0 0 0 1 1 0
       1 1 1 1 1 0 0 1 inverted
                     1
       1 1 1 1 1 0 1 0 sub-result
-12 =  0 0 0 0 1 1 0 0
       1 1 1 1 0 0 1 1 inverted
                     1
       1 1 1 1 0 1 0 0 sub-result
----------------------
       1 1 1 0 1 1 1 0 result

7.
if XOR of the carry-bits into and out of the MSB is 1, then there
is an overflow condition?

answer: Yes when inputs differ from each other, the XOR gives
1 as result, and therefore makes an overflow at MSB
But of inputs are same, output will be 0 and no overflow will occur.
